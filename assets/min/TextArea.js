/** ! created at <%= grunt.template.today("yyyy-mm-dd") by cqb %> */
define(["module","react","classnames","core/BaseComponent","utils/grids","utils/omit","utils/Dom","utils/regs","FormControl"],function(a,b,c,d,e,f,g,h,i){"use strict";function j(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function k(a,b){if(!a)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!b||"object"!=typeof b&&"function"!=typeof b?a:b}function l(a,b){if("function"!=typeof b&&null!==b)throw new TypeError("Super expression must either be null or a function, not "+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var m=Object.assign||function(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)Object.prototype.hasOwnProperty.call(c,d)&&(a[d]=c[d])}return a},n=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),o=e.getGrid,p=b.PropTypes,q=function(a){function d(a){j(this,d);var b=k(this,Object.getPrototypeOf(d).call(this,a));return b.addState({value:a.value}),b}return l(d,a),n(d,[{key:"componentWillReceiveProps",value:function(a){var b=a.value;b!==this.props.value&&b!==this.state.value&&this.setState({value:b})}},{key:"handleChange",value:function(a){this.props.autoHeight&&this.autoHeight(a);var b=this.props,c=b.readOnly,d=(b.type,b.trigger);if(!c){var e=a.target.value;this.setState({value:e}),"change"===d&&this.handleTrigger(a)}}},{key:"autoHeight",value:function(a){var b=a.target;if(this.initHeight||(this.initHeight=b.clientHeight),b.scrollHeight>this.initHeight){b.style.height="auto",b.style.overflowY="hidden",b.scrollTop=0;var c=this.getPadding(b);b.style.height=b.scrollHeight+c+"px"}}},{key:"getPadding",value:function(a){var b=parseFloat(g.css(a,"paddingTop")),c=parseFloat(g.css(a,"paddingBottom")),d=parseFloat(g.css(a,"borderTopWidth")),e=parseFloat(g.css(a,"borderBottomWidth"));return b+c+d+e}},{key:"handleTrigger",value:function(a){var b=a.target.value;this.props.onChange&&this.props.onChange(b,a),this.emit("change",b)}},{key:"getValue",value:function(){return this.state.value}},{key:"setValue",value:function(a){this.setState({value:a})}},{key:"render",value:function(){var a=this,d=this.props,e=d.className,g=d.grid,h=(d.type,d.trigger),i=d.style,j=d.height,k=f(this.props,["className","grid","type","trigger","style","autoHeight"]),l=this.props.handleChange?function(b){a.props.handleChange(b,{component:a})}:this.handleChange.bind(this);i=i||{},i.height=j;var n={className:c(e,"cm-form-control",o(g)),onChange:l,style:i};if(h&&"change"!==h){var p="on"+h.charAt(0).toUpperCase()+h.slice(1);n[p]=l}return b.createElement("textarea",m({},k,n,{value:this.state.value}))}}]),d}(d);i.register(q,["textarea"]),q.propTypes={value:p.string,className:p.string,disabled:p.bool,readOnly:p.oneOfType([p.bool,p.string]),autoHeight:p.oneOfType([p.bool,p.string]),height:p.string},q.defaultProps={trigger:"blur",value:""},a.exports=q});